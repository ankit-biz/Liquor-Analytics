create database LiquorAnalytics;
use LiquorAnalytics;
-- 1.
CREATE TABLE customers_Details (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(30),
    age varchar(2),
    Gender VARCHAR(7),
    City VARCHAR(30),
    State VARCHAR(30),
    ContactNumber VARCHAR(20),
    Email VARCHAR(50),
    TotalPurchases DECIMAL(10 , 2 )
);
load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Liquor/customers_Details.csv'
into table customers_Details
fields terminated by ','
lines terminated by '\n'
ignore 1 rows;

-- 2.
CREATE TABLE products_table (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(50),
    Category VARCHAR(20),
    Brand VARCHAR(20),
    AlcoholPercentage VARCHAR(2),
    BottleSize VARCHAR(10),
    Price DECIMAL(10 , 2 ),
    SupplierID int,
    FOREIGN KEY (SupplierID)
        REFERENCES suppliers_table(SupplierID) on delete cascade
);
load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Liquor/products_table.csv'
into table products_table
fields terminated by ','
lines terminated by '\n'
ignore 1 rows;
select * from products_table;
-- 3.
CREATE TABLE inventory_table (
    InventoryID INT PRIMARY KEY,
    ProductID INT,
    FOREIGN KEY (ProductID)
        REFERENCES products_table (ProductID)
        ON DELETE CASCADE,
    StockQuantity VARCHAR(10),
    LastRestockedDate DATE,
    ReorderLevel VARCHAR(10),
    WarehouseLocation VARCHAR(20)
);
load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Liquor/inventory_table.csv'
into table inventory_table
fields terminated by ','
lines terminated by '\n'
ignore 1 rows;

-- 4.
CREATE TABLE suppliers_table (
    SupplierID INT PRIMARY KEY,
    SupplierName VARCHAR(30),
    Location VARCHAR(30),
    ContactNumber VARCHAR(15),
    Email VARCHAR(30)
);
load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Liquor/suppliers_table.csv'
into table suppliers_table
fields terminated by ','
lines terminated by '\n'
ignore 1 rows;

-- 5.
CREATE TABLE sales_transactions (
    TransactionID INT PRIMARY KEY,
    ProductID INT,
    FOREIGN KEY (ProductID)
        REFERENCES products_table (ProductID)
        ON DELETE CASCADE,
    SupplierID INT,
    FOREIGN KEY (SupplierID)
        REFERENCES suppliers_table (SupplierID)
        ON DELETE CASCADE,
    QuantitySold VARCHAR(10),
    SellingPrice DECIMAL(10 , 2 ),
    TotalAmount DECIMAL(10 , 2 ),
    TransactionDate DATE,
    CustomerID INT,
    FOREIGN KEY (CustomerID)
        REFERENCES customers_Details (CustomerID)
        ON DELETE CASCADE
);
load data infile 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/Liquor/sales_transactions.csv'
into table sales_transactions
fields terminated by ','
lines terminated by '\n'
ignore 1 rows;
---------------------------------------------------------------------
-- Real Business-Based Questions for Liquor Analytics
-- ðŸ”¹ Sales & Revenue Analysis
-- Q1. What are the top 10 best-selling liquor brands based on revenue?
select brand, sum(sales_transactions.TotalAmount) as Tota_Sales_Price from products_table JOIN sales_transactions on 
sales_transactions.ProductID = products_table.ProductID
GROUP BY brand ORDER BY Tota_Sales_Price desc LIMIT 10;

-- Q2. Which product category (whiskey, rum, vodka, etc.) generates the highest sales?
select Category, sum(sales_transactions.TotalAmount) as Tota_Sales_Price from products_table JOIN sales_transactions on 
sales_transactions.ProductID = products_table.ProductID
GROUP BY Category ORDER BY Tota_Sales_Price desc LIMIT 10;

-- Q3. What is the average revenue per transaction over the past 12 months?
SELECT ROUND(SUM(TotalAmount) / COUNT(DISTINCT TransactionID), 2) AS Avg_Revenue_Per_Transaction from sales_transactions where TransactionDate>2023-02-01;

select * from sales_transactions;
-- Q4. How has the revenue changed month-over-month and year-over-year?

-- Month By month
with Montly_revenue as (
			select 
            date_format(TransactionDate,'%Y-%m') as montha ,
            sum(TotalAmount) as Revenue from sales_transactions group by montha)
select montha, Revenue, lag(Revenue) over(order by montha) as PriviousMonth_Revenue,
round((revenue - lag(revenue) over(order by montha))/lag(revenue) over(order by montha)*100) as Percent from Montly_revenue;
select * from sales_transactions;

-- Year By year
with Yearly_revenue as (
select date_format(transactionDate, '%Y') as years, sum(totalamount) as revenue from sales_transactions group by years)
select years, revenue, lag(revenue) over(order by years) as PreviousYear_Revenue ,
round((revenue- lag(revenue) over(order by years))/ lag(revenue) over(order by years) * 100) as Percent from Yearly_revenue;

-- Q5. What percentage of total revenue is generated by premium vs. economy liquor brands?
with cate as (
SELECT ProductName, Price, case
WHEN price>4000 THEN 'Premium'
when price>2500 then 'Economy' ELSE 'Cheapest' end as 'DaaruBudget' from products_table )
select DaaruBudget,sum(price) as revenue from cate group by DaaruBudget;

-- Q6. Which state contributes the most to total liquor sales?
SELECT 
    location, SUM(totalamount) AS Revenue, round((SUM(totalamount) / (SELECT SUM(totalamount) FROM sales_transactions) * 100)) AS Revenue_Percentage
FROM
    suppliers_table
        JOIN
    sales_transactions ON suppliers_table.SupplierID = sales_transactions.SupplierID
GROUP BY Location
ORDER BY Revenue desc;

-- Q.7 What is the average order value per customer segment (age group, gender, location)?
select age, avg(sales_transactions.TotalAmount) as AvgPurchase, DENSE_RANK() over(order by avg(sales_transactions.TotalAmount) desc) as ran   from customers_details join sales_transactions on 
customers_details.CustomerID=sales_transactions.CustomerID GROUP BY age;

select gender, avg(sales_transactions.TotalAmount) as AvgPurchase, DENSE_RANK() over(order by avg(sales_transactions.TotalAmount) desc) as ran  from customers_details join sales_transactions on 
customers_details.CustomerID=sales_transactions.CustomerID GROUP BY gender;

-- Q.8 Which cities or states have the highest number of repeat customers?
SELECT 
    Location as state, COUNT(DISTINCT CustomerID) as No_Of_Repetative
FROM
    sales_transactions
        JOIN
    suppliers_table ON sales_transactions.SupplierID = suppliers_table.SupplierID
GROUP BY Location HAVING COUNT(DISTINCT CustomerID)>1 ORDER BY No_Of_Repetative DESC;

-- Q.9 What are the most common liquor preferences based on customer demographics?
SELECT 
    productname, COUNT(CustomerID) AS Bought
FROM
    sales_transactions
        JOIN
    products_table ON sales_transactions.ProductID = products_table.ProductID
GROUP BY ProductName
ORDER BY Bought
LIMIT 5;

-- Q.10 How many new customers were acquired in the last quarter?
-- Q.10 What is the churn rate (customers who stopped purchasing) and reasons behind it?
WITH Previous_Customers AS (
    SELECT DISTINCT CustomerID 
    FROM sales_transactions
    WHERE TransactionDate BETWEEN '2023-08-01' AND '2024-01-01'
),
Retained_Customers AS (
    SELECT DISTINCT CustomerID 
    FROM sales_transactions
    WHERE TransactionDate >= '2024-01-01'
    AND CustomerID IN (SELECT CustomerID FROM Previous_Customers)
),
Customer_Counts AS (
    SELECT 
        (SELECT COUNT(*) FROM Previous_Customers) AS PreviousActive,
        (SELECT COUNT(*) FROM Retained_Customers) AS Retained
)
SELECT 
    PreviousActive, 
    Retained, 
    ROUND((1 - (Retained / PreviousActive)) * 100, 2) AS ChurnRate
FROM Customer_Counts;

-- Which warehouse locations have the highest stock demand?
select WarehouseLocation, rank() over (ORDER BY sum(StockQuantity)) as AvgStock from inventory_table GROUP BY WarehouseLocation;
